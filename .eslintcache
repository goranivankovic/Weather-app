[{"E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\index.js":"1","E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\App.js":"2","E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\components\\Weather2.js":"3"},{"size":174,"mtime":1674772529570,"results":"4","hashOfConfig":"5"},{"size":247,"mtime":1674772511689,"results":"6","hashOfConfig":"5"},{"size":13372,"mtime":1679502338116,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"10iclir",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\index.js",[],["16","17"],"E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\App.js",[],"E:\\coding\\2020 HTML\\React\\weather-react-app\\src\\components\\Weather2.js",["18","19","20","21","22","23","24","25","26"],"import React,{useState,useEffect} from 'react'\r\n\r\n\r\nimport axios from 'axios';\r\nimport weatherStyle from '../Styles/Weather.module.css'\r\n\r\nimport ReactCountryFlag from \"react-country-flag\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Weather2() {\r\n\r\nconst [ar,setAr]=useState({})\r\n\r\n\r\n\r\nconst[city,setCity]=useState('Novi Sad')\r\nconst[inputValue,setInputValue]=useState('')\r\n\r\n// Default on Loading and Eror\r\n\r\nconst[laz,setlaz]=useState(true)\r\n\r\nconst[defaultCity,setDefaultCity]=useState('')\r\nconst[defaultTemp,setDefaultTemp]=useState('')\r\nconst[defaultDescription,setDefaultDescription]=useState('')\r\nconst[defaultWind,setDefaultWind]=useState('')\r\nconst[defaultHumidity,setDefaultHumidity]=useState('')\r\n\r\n\r\n\r\n\r\n//First row Varibles\r\n\r\nconst[temp,setTemp]=useState('')\r\nconst[description,setDescription]=useState('')\r\nconst[wind,setWind]=useState('')\r\nconst[humidity,setHumidity]=useState('')\r\nconst[flag,setFlag]=useState('rs')\r\n\r\n\r\n//Day 1 Varibles\r\n\r\nconst[day1Date,setDay1Date]=useState('')\r\nconst[day1Image,setDay1Image]=useState('')\r\nconst[day1Temp,setDay1Temp]=useState('')\r\nconst[day1Pressure,setDay1Pressure]=useState('')\r\nconst[day1Desc,setDay1Desc]=useState('')\r\nconst[day1Wind,setDay1Wind]=useState('')\r\n\r\n\r\n\r\n\r\n//Day 2 Varibles\r\n\r\nconst[day2Date,setDay2Date]=useState('')\r\nconst[day2Image,setDay2Image]=useState('')\r\nconst[day2Temp,setDay2Temp]=useState('')\r\nconst[day2Pressure,setDay2Pressure]=useState('')\r\nconst[day2Desc,setDay2Desc]=useState('')\r\nconst[day2Wind,setDay2Wind]=useState('')\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Day 3 Varibles\r\n\r\nconst[day3Date,setDay3Date]=useState('')\r\nconst[day3Image,setDay3Image]=useState('')\r\nconst[day3Temp,setDay3Temp]=useState('')\r\nconst[day3Pressure,setDay3Pressure]=useState('')\r\nconst[day3Desc,setDay3Desc]=useState('')\r\nconst[day3Wind,setDay3Wind]=useState('')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Day 4 Varibles\r\n\r\nconst[day4Date,setDay4Date]=useState('')\r\nconst[day4Image,setDay4Image]=useState('')\r\nconst[day4Temp,setDay4Temp]=useState('')\r\nconst[day4Pressure,setDay4Pressure]=useState('')\r\nconst[day4Desc,setDay4Desc]=useState('')\r\nconst[day4Wind,setDay4Wind]=useState('')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Day 5 Varibles\r\n\r\nconst[day5Date,setDay5Date]=useState('')\r\nconst[day5Image,setDay5Image]=useState('')\r\nconst[day5Temp,setDay5Temp]=useState('')\r\nconst[day5Pressure,setDay5Pressure]=useState('')\r\nconst[day5Desc,setDay5Desc]=useState('')\r\nconst[day5Wind,setDay5Wind]=useState('')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(async () => {\r\n\r\n\r\n axios.all([\r\n\r\n  axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`),\r\n  axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`)\r\n\r\n])\r\n .then(axios.spread((firstReq, secoondReq) => {\r\n\r\n\r\n  \r\n\r\n      // Default Varibales\r\n      setDefaultCity(firstReq.data.name)\r\n      setDefaultTemp(firstReq.data.main.temp)\r\n      setDefaultDescription(firstReq.data.weather[0].description)\r\n      setDefaultWind(firstReq.data.wind.speed)\r\n      setDefaultHumidity(firstReq.data.main.humidity)\r\n\r\n\r\n \r\n\r\n\r\n\r\n    //First Row items\r\n\r\n\r\n     setCity(firstReq.data.name)\r\n     setTemp(firstReq.data.main.temp)\r\n     setDescription(firstReq.data.weather[0].description)\r\n     setWind(firstReq.data.wind.speed)\r\n     setHumidity(firstReq.data.main.humidity)\r\n     setFlag(firstReq.data.sys.country)\r\n\r\n\r\n\r\n\r\n     //Day 1 Items\r\n\r\n     setDay1Date(secoondReq.data.list[6].dt_txt)\r\n     setDay1Image(`https://openweathermap.org/img/w/${secoondReq.data.list[6].weather[0].icon}.png`)\r\n     setDay1Temp(secoondReq.data.list[6].main.temp_max)\r\n     setDay1Pressure(secoondReq.data.list[6].main.pressure)\r\n     setDay1Desc(secoondReq.data.list[6].weather[0].description)\r\n     setDay1Wind(secoondReq.data.list[6].wind.speed)\r\n\r\n\r\n\r\n       //Day 2 Items\r\n\r\n     setDay2Date(secoondReq.data.list[14].dt_txt)\r\n     setDay2Image(`https://openweathermap.org/img/w/${secoondReq.data.list[14].weather[0].icon}.png`)\r\n     setDay2Temp(secoondReq.data.list[14].main.temp_max)\r\n     setDay2Pressure(secoondReq.data.list[14].main.pressure)\r\n     setDay2Desc(secoondReq.data.list[14].weather[0].description)\r\n     setDay2Wind(secoondReq.data.list[14].wind.speed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n     \r\n       //Day 3 Items\r\n\r\n     setDay3Date(secoondReq.data.list[22].dt_txt)\r\n     setDay3Image(`https://openweathermap.org/img/w/${secoondReq.data.list[22].weather[0].icon}.png`)\r\n     setDay3Temp(secoondReq.data.list[22].main.temp_max)\r\n     setDay3Pressure(secoondReq.data.list[22].main.pressure)\r\n     setDay3Desc(secoondReq.data.list[22].weather[0].description)\r\n     setDay3Wind(secoondReq.data.list[22].wind.speed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n       //Day 4 Items\r\n\r\n     setDay4Date(secoondReq.data.list[30].dt_txt)\r\n     setDay4Image(`https://openweathermap.org/img/w/${secoondReq.data.list[30].weather[0].icon}.png`)\r\n     setDay4Temp(secoondReq.data.list[30].main.temp_max)\r\n     setDay4Pressure(secoondReq.data.list[30].main.pressure)\r\n     setDay4Desc(secoondReq.data.list[30].weather[0].description)\r\n     setDay4Wind(secoondReq.data.list[30].wind.speed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n       \r\n       //Day 5 Items\r\n\r\n     setDay5Date(secoondReq.data.list[38].dt_txt)\r\n     setDay5Image(`https://openweathermap.org/img/w/${secoondReq.data.list[38].weather[0].icon}.png`)\r\n     setDay5Temp(secoondReq.data.list[38].main.temp_max)\r\n     setDay5Pressure(secoondReq.data.list[38].main.pressure)\r\n     setDay5Desc(secoondReq.data.list[38].weather[0].description)\r\n     setDay5Wind(secoondReq.data.list[38].wind.speed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n    }))\r\n    .catch((error)=>{ \r\n\r\n       if (error.response.status == 404) {\r\n\r\n\r\n      setlaz(false)\r\n      window.location='/'\r\n\r\n    \r\n      \r\n     }\r\n\r\n      \r\n     })\r\n\r\n\r\n\r\n  return () => {\r\n    setAr({})\r\n  }\r\n}, [])\r\n\r\n\r\n\r\n\r\n\r\n  \r\n    function getUserCityName(a) {\r\n\r\n\r\n      a.preventDefault()\r\n\r\n\r\n      axios.all([\r\n\r\n           axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${inputValue}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`),\r\n           axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${inputValue}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`)\r\n\r\n        ])\r\n           .then(axios.spread((firstReq, secoondReq) => {\r\n\r\n           \r\n\r\n              let input =document.getElementById('inputValue')\r\n\r\n               setCity(firstReq.data.name)\r\n\r\n                setlaz(true)\r\n\r\n\r\n\r\n\r\n\r\n\r\n                 // Default Varibales\r\n      setDefaultCity(firstReq.data.name)\r\n      setDefaultTemp(firstReq.data.main.temp)\r\n      setDefaultDescription(firstReq.data.weather[0].description)\r\n      setDefaultWind(firstReq.data.wind.speed)\r\n      setDefaultHumidity(firstReq.data.main.humidity)\r\n      setFlag(firstReq.data.sys.country)\r\n\r\n\r\n \r\n\r\n\r\n\r\n    //First Row items\r\n\r\n\r\n     setCity(firstReq.data.name)\r\n     setTemp(firstReq.data.main.temp)\r\n     setDescription(firstReq.data.weather[0].description)\r\n     setWind(firstReq.data.wind.speed)\r\n     setHumidity(firstReq.data.main.humidity)\r\n\r\n\r\n\r\n     //Day 1 Items\r\n\r\n     setDay1Date(secoondReq.data.list[6].dt_txt)\r\n     setDay1Image(`https://openweathermap.org/img/w/${secoondReq.data.list[6].weather[0].icon}.png`)\r\n     setDay1Temp(secoondReq.data.list[6].main.temp_max)\r\n     setDay1Pressure(secoondReq.data.list[6].main.pressure)\r\n     setDay1Desc(secoondReq.data.list[6].weather[0].description)\r\n     setDay1Wind(secoondReq.data.list[6].wind.speed)\r\n\r\n\r\n\r\n       //Day 2 Items\r\n\r\n     setDay2Date(secoondReq.data.list[14].dt_txt)\r\n     setDay2Image(`https://openweathermap.org/img/w/${secoondReq.data.list[14].weather[0].icon}.png`)\r\n     setDay2Temp(secoondReq.data.list[14].main.temp_max)\r\n     setDay2Pressure(secoondReq.data.list[14].main.pressure)\r\n     setDay2Desc(secoondReq.data.list[14].weather[0].description)\r\n     setDay2Wind(secoondReq.data.list[14].wind.speed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n     \r\n       //Day 3 Items\r\n\r\n     setDay3Date(secoondReq.data.list[22].dt_txt)\r\n     setDay3Image(`https://openweathermap.org/img/w/${secoondReq.data.list[22].weather[0].icon}.png`)\r\n     setDay3Temp(secoondReq.data.list[22].main.temp_max)\r\n     setDay3Pressure(secoondReq.data.list[22].main.pressure)\r\n     setDay3Desc(secoondReq.data.list[22].weather[0].description)\r\n     setDay3Wind(secoondReq.data.list[22].wind.speed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n       //Day 4 Items\r\n\r\n     setDay4Date(secoondReq.data.list[30].dt_txt)\r\n     setDay4Image(`https://openweathermap.org/img/w/${secoondReq.data.list[30].weather[0].icon}.png`)\r\n     setDay4Temp(secoondReq.data.list[30].main.temp_max)\r\n     setDay4Pressure(secoondReq.data.list[30].main.pressure)\r\n     setDay4Desc(secoondReq.data.list[30].weather[0].description)\r\n     setDay4Wind(secoondReq.data.list[30].wind.speed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n       \r\n       //Day 5 Items\r\n\r\n     setDay5Date(secoondReq.data.list[38].dt_txt)\r\n     setDay5Image(`https://openweathermap.org/img/w/${secoondReq.data.list[38].weather[0].icon}.png`)\r\n     setDay5Temp(secoondReq.data.list[38].main.temp_max)\r\n     setDay5Pressure(secoondReq.data.list[38].main.pressure)\r\n     setDay5Desc(secoondReq.data.list[38].weather[0].description)\r\n     setDay5Wind(secoondReq.data.list[38].wind.speed)\r\n\r\n\r\n\r\n\r\n\r\n\r\n           \r\n\r\n\r\n              input.value=''\r\n        }))\r\n       .catch(error=>{ \r\n\r\n         let input =document.getElementById('inputValue')\r\n         input.value=''\r\n       \r\n\r\n         if (error.response.status === 404) {\r\n\r\n         \r\n\r\n          setlaz(false)\r\n          // window.location='/'\r\n          \r\n         }\r\n\r\n  \r\n\r\n          \r\n     \r\n\r\n      \r\n        })\r\n   \r\n\r\n\r\n  \r\n        \r\n        }\r\n \r\n\r\n\r\n  return (\r\n    <div className={weatherStyle.main}>\r\n\r\n\r\n      <div className={weatherStyle.firstDiv}> \r\n              <div className={weatherStyle.logo}> Weather App</div>\r\n              <form className={weatherStyle.input} onSubmit={getUserCityName}> <input type=\"text\" placeholder='  Enter City...' id='inputValue' onChange={(a)=>{setInputValue(a.target.value)}} /> <button type='submit'>Search</button></form>  \r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div className={weatherStyle.secondDiv}>\r\n\r\n             <div>{city} <ReactCountryFlag countryCode={flag} svg/></div>\r\n             <div> {Math.floor(temp)+ '\\xB0'}</div>\r\n             <div>{description}</div>\r\n             <div>Wind : {wind} m/s</div>\r\n             <div>Humidity : {humidity} %</div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    {laz  ?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div className={weatherStyle.threddDiv}>\r\n\r\n\r\n\r\n\r\n            <div className={weatherStyle.threddDivItems}>\r\n\r\n                  <span>{day1Date.slice(8,10)}.{day1Date.slice(5,7)}  | {day1Date.slice(0,4)}  |  {day1Date.slice(10,16)}</span>  \r\n                  {Math.floor(day1Temp)+'\\xB0'}  \r\n                 <span>{day1Wind}/ms  <span className={weatherStyle.weatherComment} >{day1Desc}</span>   {day1Pressure} mb </span>\r\n                  <img src={day1Image} alt=\"Weather\" />\r\n                                         \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div className={weatherStyle.threddDivItems}>\r\n\r\n                  <span>{day2Date.slice(8,10)}.{day2Date.slice(5,7)}  | {day2Date.slice(0,4)}  |  {day2Date.slice(10,16)}</span>  \r\n                  {Math.floor(day2Temp)+'\\xB0'}  \r\n                 <span>{day2Wind}/ms <span className={weatherStyle.weatherComment} >{day2Desc}</span>   {day2Pressure} mb </span>\r\n                  <img src={day2Image} alt=\"Weather\" />\r\n                                         \r\n            </div>\r\n\r\n\r\n\r\n\r\n              <div className={weatherStyle.threddDivItems}>\r\n\r\n                  <span>{day3Date.slice(8,10)}.{day3Date.slice(5,7)}  | {day3Date.slice(0,4)}  |  {day3Date.slice(10,16)}</span>  \r\n                  {Math.floor(day3Temp)+'\\xB0'}  \r\n                 <span>{day3Wind}/ms <span className={weatherStyle.weatherComment} >{day3Desc}</span>   {day3Pressure} mb </span>\r\n                  <img src={day3Image} alt=\"Weather\" />\r\n                                         \r\n            </div>\r\n\r\n\r\n\r\n            \r\n              <div className={weatherStyle.threddDivItems}>\r\n\r\n                  <span>{day4Date.slice(8,10)}.{day4Date.slice(5,7)}  | {day4Date.slice(0,4)}  |  {day4Date.slice(10,16)}</span>  \r\n                  {Math.floor(day4Temp)+'\\xB0'}  \r\n                 <span>{day4Wind}/ms <span className={weatherStyle.weatherComment} >{day4Desc}</span>   {day4Pressure} mb </span>\r\n                  <img src={day4Image} alt=\"Weather\" />\r\n                                         \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n             <div className={weatherStyle.threddDivItems}>\r\n\r\n                  <span>{day5Date.slice(8,10)}.{day5Date.slice(5,7)}  | {day5Date.slice(0,4)}  |  {day5Date.slice(10,16)}</span>  \r\n                  {Math.floor(day5Temp)+'\\xB0'}  \r\n                 <span>{day5Wind}/ms <span className={weatherStyle.weatherComment} >{day5Desc}</span>   {day5Pressure} mb </span>\r\n                  <img src={day5Image} alt=\"Weather\" />\r\n                                         \r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n           \r\n             \r\n                    \r\n                \r\n                    \r\n                \r\n             \r\n            \r\n          </div>  \r\n\r\n\r\n\r\n: <div className={weatherStyle.notFound} >Not Found!</div> }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className={weatherStyle.empdtyDiv}>\r\n\r\n        </div>\r\n      \r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather2\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":19,"column":8,"nodeType":"33","messageId":"34","endLine":19,"endColumn":10},{"ruleId":"31","severity":1,"message":"35","line":30,"column":7,"nodeType":"33","messageId":"34","endLine":30,"endColumn":18},{"ruleId":"31","severity":1,"message":"36","line":31,"column":7,"nodeType":"33","messageId":"34","endLine":31,"endColumn":18},{"ruleId":"31","severity":1,"message":"37","line":32,"column":7,"nodeType":"33","messageId":"34","endLine":32,"endColumn":25},{"ruleId":"31","severity":1,"message":"38","line":33,"column":7,"nodeType":"33","messageId":"34","endLine":33,"endColumn":18},{"ruleId":"31","severity":1,"message":"39","line":34,"column":7,"nodeType":"33","messageId":"34","endLine":34,"endColumn":22},{"ruleId":"40","severity":1,"message":"41","line":123,"column":11,"nodeType":"42","endLine":254,"endColumn":2},{"ruleId":"43","severity":1,"message":"44","line":236,"column":34,"nodeType":"45","messageId":"46","endLine":236,"endColumn":36},{"ruleId":"40","severity":1,"message":"47","line":254,"column":4,"nodeType":"48","endLine":254,"endColumn":6,"suggestions":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'ar' is assigned a value but never used.","Identifier","unusedVar","'defaultCity' is assigned a value but never used.","'defaultTemp' is assigned a value but never used.","'defaultDescription' is assigned a value but never used.","'defaultWind' is assigned a value but never used.","'defaultHumidity' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'city'. Either include it or remove the dependency array.","ArrayExpression",["52"],"no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [city]",{"range":"55","text":"56"},[5765,5767],"[city]"]